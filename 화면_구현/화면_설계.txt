I. UI (User Interface, 사용자 Interface0
1. 정의
- 1. 사용자와 컴퓨터 상호 간 소통 원활 도와주는 연계 작업 (ex 장치 또는 S/W : 화면 Icon)
- 2. 화면 설계 -> 요구사항 분석 단계, 화면에 대한 요구사항을 UI 표준과 지침에 따라 화면 설계

2. UI 3가지 분야
- 1. 정보 제공, 기능 전달 -> 물리적 제어 분야 (ex. 자동차 핸들)
- 2. Content 상세적 표현, 전체적 구성에 관한 분야 (ex. 자동차 Display)
- 3. 사용자 편의성, 쉽고 간편하게 사용 가능 -> 기능적 분야 (ex. 자동차 Navigation)

3. UI 의 설계 원칙
- 1. 직관성 -> 누구나 쉽게 이해하고 사용 (ex. 스마트폰 Icon)
- 2. 유효성 -> 사용자 목적 정확하게 달성 (ex. 터치하면 실행)
- 3. 학습성 -> 누구나 쉽게 배우고 익힘 (ex. 스마트폰 사용)
- 4. 유연성 -> 사용자 요구사항 최대 수용, 오류 최소화 (ex. 스마트폰 Touch)

4. UI 설계 지침
- 1. 사용자 중심 -> 사용자 이해하기 편하고 쉽게 사용할 수 있는 환경 제공
- 2. 일관성 -> 사용자 기억하기 쉽고 빠른 습득 가능하게 설계
- 3. 단순성 -> 조작 방법 가장 간단하게 작동 가능하도록 하여 인지적 부담 감소
- 4. 결과 예측 가능 -> 작동시킬 기능만 보고도 결과 예측 가능해야 함
- 5. 표준화 -> 디자인 표준화, 기능 구조의 선행 학습 이후 쉽게 사용할 수 있어야 함
- 6. 접근성 -> 사용자 직무, 연령, 성별 등 다양한 계층 수용
- 7. 명확성 -> 사용자 개념적으로 쉽게 인지
- 8. 가시성 -> 주요 기능 메인 화면에 노출, 조작 쉽도록 해야 함
- 9. 오류 발생 해결 -> 사용자 오류에 대한 상황 정확히 인지

5. UI 가 필요한 이유
- 1. 정보 제공자, 공급자 원활하고 쉬운 매개 역할 수행
- 2. 작업 기능에 대한 구체적인 방법 제시
- 3. 사용자 편의성 증대 -> 작업 시간 단축, 업무에 대한 이해도 증대
- 4. 결과 오류 최소화

6. UI 종류
- 1. CLI (Command Line Interface) -> Text / Keyboard 기반
- 2. GUI (Graphical UI) -> 그래픽 / 마우스 기반
- 3. NUI (Natural UI) -> Object (신체) 기반
  = 인간의 말, 행동 등 감각으로 기기를 조작

- 4. VUI (Voice UI) -> 사람의 음성 기반으로 기기 조작
- 5. OUI (Organic UI) -> Object (책, 캔, 모든 물질) 기반
  = 모든 자연상태 입출력 동시에 이뤄짐
  
** UI 개발 System 필수 기능
- 1. 도움과 Prompt 제공 -> CLI, CMD 제공, 명령어 입력에 도움말(Help) 줄 수 있는 기능
- 2. 사용자 입력의 검증 및 에러 처리와 에러 메시지 처리 -> 잘못된 명령 입력되면 검증, 에러 처리 후 에러 메시지 보여줌


II. UX (User eXperience, 사용자 경험, 사용자 인식 반응 경험)
1. 정의
- 1. 사용자가 이용하면서 느끼고 생각하게 되는 지각과 반응, 행동 등 총체적 경험
- 2. UI -> 고속도로 (누구나 빠르고 편리하게 이용)
- 3. UX -> Drive Course (사용자 경험, 목표를 이해 및 충족하는 UI Design)

2. 특징
- 1. 주관성 (Subjectivity) -> 사용자 경험은 개인적, 신체적, 인지적 특성에 따라 다름, 주관적 => ex) 그립감
- 2. 맥락성 (Contextuality, 경험성) -> 경험 일어나는 상황, 외적 환경에 영향 받음
- 3. 총체성 (Holistic) -> 경험 시점, 개인 느끼는 총체적인 심리적, 감성적인 결과


III. UI 설계 도구
1. 와이어프레임 (Wireframe) -> 화면 단위 Layout 설계, UI 요소 등에 대한 뼈대, Service 의 간략한 흐름 공유
2. 목업 (Mockup) -> 실물과 흡사한 정적인 형태의 모형
3. 스토리보드 (Stodyboard) -> 개발자, Designer 의사소통 위한 도구, 사용자, 목표, Content 설명 및 Page 간 이동 흐름 시각화한 문서
4. 프로토타입 (Prototype, UI 프로토타입) -> StoryBoard, WireFrame 에 동적 효과 적용, 실제 구현된 것처럼 시뮬레이션 가능한 동적 모형

** StodyBoard
- 1. Designer 와 개발자가 최종적으로 참고하는 산출 문서, 대부분의 정보가 수록
- 2. Stodyboard 작성 기법
  = 1. 메뉴 구성도 만들기 (Storyboard 1단계) -> 전체적인 메뉴 구성도, 메뉴 순서, 구성 단계, 용어 정의
  = 2. Style 확정 (Storyboard 2단계) -> Layout, 글자, 모양, 크기, 색상, Graphic 에서 일관성 유지 => 웹 스타일 가이드 (UI 규칙) 에 맞게 일관성 유지
  = 3. 설계하기 (Storyboard 3단계) -> 화면에 보여지는 시각적인 Design Concept 를 잡음
  
