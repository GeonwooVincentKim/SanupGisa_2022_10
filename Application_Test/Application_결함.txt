I. S/W 결함 (Software Defect)
1. S/W 결합
- 1. Error 오류 -> 결함 (Defect) 원인, 일반적으로 사람 (S/W 개발자, 분석가 등)에 의해 생성된 실수 (무한 Loop Code 작성)
- 2. 결함/결정/버그 (Bug) -> Error 또는 오류가 원인 -> 실패 (Failure) 하거나 문제 (Problem) 발생 가능
- 3. 실패 / 문제 -> 결함이 실행될 때 발생되는 현상

2. 결함관리 항목
- 1. 결함관리 System
- 2. 결함 내용, 결함 ID, 결함 유형, 발견일, 심각도, 우선순위 (결함 수정 우선순위), 시정 조치 예정일, 수정 담당자, 재테스트 결과, 종료일

3. 결함 식별 및 관리
- 1. 단계별 결함 유입 분류
  = 1. 기획 -> 사용자 요구사항 표준 미준수
  = 2. 설계 -> 기획 단계에서 유입된 결함, 설계 표준 미준수
  = 3. 코딩 -> 설계 단계에 유입된 결함, 코딩 표준 미준수
  = 4. Test 부족 -> 테스트 완료 기준 미준수, Test Team, 개발 Team 의사소통 부족, 개발자 코딩 실수

- 2. 결함 (심각도별) 분류
  = 1. Application 에 발생한 결함의 영향 끼치는 정도, 치명도
  = 2. 결함 심각도 분류 사례
    -> 치명적 (Critical) 결함, 주요 (Major) 결함, 보통 (Normal) 결함, 경미한 (Minor) 결함, 단순 (Simple) 결함

- 3. 결함 우선순위
  = 1. 발생한 결함이 빠르게 처리되어야 하는지 결정하는 척도
  = 2. 결함 심각도와 우선 순위
    -> 결함 심각도가 높아도 우선순위가 반드시 높은 것은 아님
  
  = 3. 결함 우선순위 표현 사례
    -> 1. 결정적 (Critical), 높음 (High), 보통 (Medium), 낮음 (Low)
    -> 2. 즉시 해결, 주의 요망, 대기, 개선 권고
  
- 4. 결함 관리 도구 -> Bugzilla, Trac, Redmine, Mantis

** 결함 심각도
- 1. High -> System 중단되어 더 이상 Process 진행 불가 => System 핵심 요구사항 미 구현, 장시간 System 다운, System 복구 후 Data 왜곡
- 2. Medium -> System 흐름에 영향을 미치는 결함 => 부정확한 기능 및 업무 Process, Data Field 형식 오류, DB 에러, 보안 관련 오류
- 3. Low 
  = 1. System 흐름 영향 미치지 않는 결함, 상황에 맞지 않는 용도 및 화면 구성 결함
  = 2. 부정확한 GUI, Message, Error 시 Message 미출력, 화면상 문법/철자 오류


II. 결함관리 Process
1. 결함관리 계획 -> 전체 Process 결함관리 일정, 인력, 업무 Process 확보하여 계획 수립
2. 결함 기록 -> Tester 는 발견된 결함에 대한 정보를 결함관리 DB 에 기록
3. 결함 검토 -> 등록된 결함에 있어서 주요 내용 검토, 결함 수정할 개발자에게 전달
4. 결함 수정 -> 개발자는 할당된 결함의 Program 수정
5. 결함 재확인 -> Tester 는 개발자가 수정한 내용 확인, 다시 Test 수행
6. 결함 상태 추적 및 모니터링 활동 -> 결함관리 DB 이용, Dashboard, 게시판 형태 Service 제공
7. 최종 결함 분석 및 보고서 작성 -> 발견된 결함 내용, 이해관계자들의 의견 반영된 보고서를 작성, 결함관리 종료


III. 결함 상태 및 추적
1. 정의 -> 상태 변화를 지속적으로 추적 관리

                                      (결함 발견)
                                         ↓           (재오픈)
결함 검토 ←------ (검토 회의) ------    결함 등록 ←--------------------┐
|       |------------ (할당) ------ |    ↓ (할당)                     |
|연기,          |                   |→ 결함 할당                      |
|해결불가       |            (결함 수정)  ↓ ←-------┐                  |
|              |                       결함 수정   | (테스트 실패)     |
|            (결함 해제)     (수정 확인)  ↓ --------┘                  |
|              └---------------------→ 결함 종료                      |
↓                                                                    |
결함 조치 보류 -------------------------------------------------------┘


2. 결함 등록 (Open) -> 결함 처음 발견, 등록(보고), 아직 분석되지 않은 상태
3. 결함 검토 (Review) -> 등록된 결함을 개발자, Tester, Program Leader, 담당자와 검토하는 상태
4. 결함 할당 (Assigned) -> 개발자, 담당자에게 할당된 상태
5. 결함 수정 (Resolved) -> 수정 완료된 상태
6. 결함 조치 분류 (Deferred)
- 1. 수정 필요한 결함, 수정 불가능해서 연기된 상태
- 2. 우선순위, 일정 등을 고려하여 재오픈 준비하는 상태

7. 결함 종료 (Closed) -> 발견된 결함 해결, 종료 승인을 한 상태
8. 결함 해제 (Clarified) -> Tester, Program Leader, 담당자가 결함 검토 후, 결함 아니라고 판명된 경우


IV. 결함 분류
1. System 결함
- 1. Application 결함과 DB 처리에서 발생하는 결함
- 2. 발생하는 결함
  = 1. 비정상적인 종료/중단 -> 특정 기능 실행 시, 응용 프로그램 작동 정지, 종료, System Down 되는 현상
  = 2. 응답 시간 지연 -> 지연, 메모리 부족, H/W, S/W 비일관성으로 발생
  = 3. DB Error -> Data 등록/수정/삭제/조회가 정상적으로 작동 X
  
2. 기능 결함
- 사용자의 요구사항 미반영/불일치, 부정확한 Business Process, Script Error, 타 System 연동 시 오류
  = 1. 요구사항 미반영 / 불일치 -> 구현 X, 다르게 구현되어 작동하는 경우
  = 2. 부정확한 Business Process -> 기능 자체 수행, 내부 Process Logic 의 문제로 부정확한 결과를 내는 경우
  = 3. Script Error -> 특정 기능 실행 시, Web Broswer 에서 Script Error 발생
  = 4. 타 System 연동 시 오류 -> 데이터 주고 받는 과정에서 오류 발생
  
3. GUI 결함
- 사용자 화면 설계에서 발생된 결함
  = 1. 응용 프로그램 UI 비일관성 -> UI 표준과 상이하게 구현된 경우
  = 2. 부정확한 Cursor / Message -> Cursor 위치 이상 (첫 번째 위치 X), Tab Sequence 순서대로 동작 X, 각 기능 Message 내용의 부정확한 내용
  = 3. Data Type 표시 오류 -> 입력 Field 지정된 형식과 다른 Data 저장, 유효하지 않은 데이터 입력 시 오류 발생
  
4. 문서 결함
- 의사소통과 기록이 원활하지 않은 경우에 발생


V. 결함 분석 도구
1. 파레토 다이어그램 (Pareto Diagram)
- 결함 원인 유형을 빈도수에 따라 표현, 빈도수가 많은 부분에 대해 우선적으로 대응하기 위해 사용

문제영역    결함수   결함비율
합계        75      100.0
구현        40      53.3
설계        20      26.7
분석        10      13.3
기타/공통    5      6

단계별 결함 유형                                   주요 내용
분석                요구사항 표준 미준수, Test 불가능, 불명확, 불완전, 불일치, 기타 결함
설계                설계 표준 미준수, Test 불가능, 불명확, 불완전, 불일치, 기타 결함
개발 (구현)         개발 표준 미준수, 불완전, 불일치, Interface 결함, Data 결함, 기타 결함
Test                Test 업무 이해 부족, Team 간 의사소통 부족, 개발자 실수

- 1. 결함 모든 요소를 목록으로 작성
- 2. 결함 관련된 요소들을 측정
- 3. 결함 수가 가장 높은 순 -> 낮은 순으로 작성
- 4. 결함 항목에 대해 백분율 계산
- 5. 자료 값을 이용하여 각 범주를 나타내는 막대 그리기
- 6. 누적 백분율을 파레토 차트에 그리기

2. 피시본 다이어그램 (Fishbone Chart / Ishikawa Diagram, 특성요인도, Cause-and-effect Diagram)
- 1. 정의 -> 결함의 근본적인 원인을 찾기 위해 활용하는 도구
- 2. 결함 주요 원인 분석
- 3. 잠재적 원인을 팀원들과 브레인스토밍
- 4. 결함 범주 나누고, 항목에 따라 잠재적 원인 추가
- 5. 팀원들과 계속 질문하여 내용 검증, 추가적인 내용을 더 제시
- 6. 결함 항목 검토, 항목 중 가장 가능성이 높은 원인을 팀원들과 브레인스토밍 등 방법으로 도출하여 작성

** 브레인 스토밍 (Brain Storming)
- 3인 이상이 자유롭게 의견 교환하여 Idea 산출하는 기법

