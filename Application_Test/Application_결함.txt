I. S/W 결함 (Software Defect)
1. S/W 결합
- 1. Error 오류 -> 결함 (Defect) 원인, 일반적으로 사람 (S/W 개발자, 분석가 등)에 의해 생성된 실수 (무한 Loop Code 작성)
- 2. 결함/결정/버그 (Bug) -> Error 또는 오류가 원인 -> 실패 (Failure) 하거나 문제 (Problem) 발생 가능
- 3. 실패 / 문제 -> 결함이 실행될 때 발생되는 현상

2. 결함관리 항목
- 1. 결함관리 System
- 2. 결함 내용, 결함 ID, 결함 유형, 발견일, 심각도, 우선순위 (결함 수정 우선순위), 시정 조치 예정일, 수정 담당자, 재테스트 결과, 종료일

3. 결함 식별 및 관리
- 1. 단계별 결함 유입 분류
  = 1. 기획 -> 사용자 요구사항 표준 미준수
  = 2. 설계 -> 기획 단계에서 유입된 결함, 설계 표준 미준수
  = 3. 코딩 -> 설계 단계에 유입된 결함, 코딩 표준 미준수
  = 4. Test 부족 -> 테스트 완료 기준 미준수, Test Team, 개발 Team 의사소통 부족, 개발자 코딩 실수

- 2. 결함 (심각도별) 분류
  = 1. Application 에 발생한 결함의 영향 끼치는 정도, 치명도
  = 2. 결함 심각도 분류 사례
    -> 치명적 (Critical) 결함, 주요 (Major) 결함, 보통 (Normal) 결함, 경미한 (Minor) 결함, 단순 (Simple) 결함

- 3. 결함 우선순위
  = 1. 발생한 결함이 빠르게 처리되어야 하는지 결정하는 척도
  = 2. 결함 심각도와 우선 순위
    -> 결함 심각도가 높아도 우선순위가 반드시 높은 것은 아님
  
  = 3. 결함 우선순위 표현 사례
    -> 1. 결정적 (Critical), 높음 (High), 보통 (Medium), 낮음 (Low)
    -> 2. 즉시 해결, 주의 요망, 대기, 개선 권고
  
- 4. 결함 관리 도구 -> Bugzilla, Trac, Redmine, Mantis

** 결함 심각도
- 1. High -> System 중단되어 더 이상 Process 진행 불가 => System 핵심 요구사항 미 구현, 장시간 System 다운, System 복구 후 Data 왜곡
- 2. Medium -> System 흐름에 영향을 미치는 결함 => 부정확한 기능 및 업무 Process, Data Field 형식 오류, DB 에러, 보안 관련 오류
- 3. Low 
  = 1. System 흐름 영향 미치지 않는 결함, 상황에 맞지 않는 용도 및 화면 구성 결함
  = 2. 부정확한 GUI, Message, Error 시 Message 미출력, 화면상 문법/철자 오류

